plugins {
  id 'war'
  id 'eclipse-wtp'
  id 'jacoco'
  id 'com.bmuschko.cargo' version '2.4'
}

ext {
    localWebServerHome =  new File(localWebServerRootDir, webServerHome)
    localWebServerLibDir = new File(localWebServerHome, webServerLibDir)
}

dependencies {

    compile group: 'sample.gradle.multi', name: 'sample-gradle-multi-shared', version: version

    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    testCompile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.2'

    providedCompile fileTree(dir: localWebServerLibDir, include: '**/*.jar')

    def cargoVersion = '1.4.5'
    cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
          "org.codehaus.cargo:cargo-ant:${cargoVersion}"
}

eclipse {

    wtp {
        component {
            contextPath  = contextPath
        }
    }
}

cargo {

    containerId = cargoContainerId
    port = Integer.parseInt(cargoPort)

    deployable {
        // ページを表示するためのURL：http://ホスト名/contextPath/ページ名
        //   例：http://localhost:8080/SampleWebApp/login.xhtml
        context = contextPath
    }

    local {
        // タスク：clean assemble cargoStopLocal cargoStartLocal
        // タスク：clean assemble cargoRedeployLocal
        homeDir = localWebServerHome // プロジェクト内にサーバがあることを想定
        timeout = 60000

        // jacocoAgentVersion = '0.8.2'
        //def jacocoAagentJar =  fileTree(dir: gradle.gradleUserHomeDir, include: "**/org.jacoco.agent-$jacocoAgentVersion" + '.jar')[0].path
        def jacocoAagentJar = new File(rootProject.projectDir , "${jacocoDir}/jacocoagent.jar}")
        jvmArgs = "-javaagent:${jacocoAagentJar}=destfile=${reportsDir}/jacoco/jacoco.exec"
    }

    remote {
        // タスク：clean assemble cargoUndeployRemote cargoDeployRemote
        hostname = cargoHostName
        username = cargoHostUser
        password = cargoHostPassword
    }
}
