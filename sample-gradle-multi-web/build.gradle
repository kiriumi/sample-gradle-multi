plugins {
  id 'war'
  id 'eclipse-wtp'
  id 'jacoco'
  id 'com.bmuschko.cargo' version '2.4'
}

ext {
    localWebServerHome = new File(rootProject.projectDir, "web-server/$webServerHome")
    localWebServerLibDir = new File(localWebServerHome, webServerLibDir)
}

dependencies {

    //compile project(':sample-gradle-multi-shared')

    //testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    compile group: 'com.codeborne', name: 'selenide', version: '4.14.2'
    testCompile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.2'

    providedCompile fileTree(dir: localWebServerLibDir, include: 'java*/**/*.jar')

    def cargoVersion = '1.4.5'
    cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
          "org.codehaus.cargo:cargo-ant:${cargoVersion}"
}

eclipse {

    wtp {
        component {
            contextPath  = contextPath
        }
    }
}

cargo {

    containerId = cargoContainerId
    port = Integer.parseInt(cargoPort)

    deployable {
        // ページを表示するためのURL：http://ホスト名/contextPath/ページ名
        //   例：http://localhost:8080/SampleWebApp/login.xhtml
        context = contextPath
    }

    local {
        // タスク：clean war cargoStartLocal check
        // タスク：clean assemble cargoRedeployLocal
        homeDir = localWebServerHome // プロジェクト内にサーバがあることを想定
        timeout = 10000

        // jacocoAgentVersion = '0.8.2'
        //def jacocoAagentJar =  fileTree(dir: gradle.gradleUserHomeDir, include: "**/org.jacoco.agent-$jacocoAgentVersion" + '.jar')[0].path
        def jacocoAagentJar = new File(rootProject.projectDir , "${jacocoDir}/jacocoagent.jar").path
        def jacocoReport = new File(reportsDir, 'jacoco/jacoco.exec').path

        jvmArgs = "-Xms64m -Xmx512m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true "
        //jvmArgs += "-javaagent:${jacocoAagentJar}=destfile=${jacocoReport},append=true"

        println jvmArgs
    }

    remote {
        // タスク：clean assemble cargoUndeployRemote cargoDeployRemote
        hostname = cargoHostName
        username = cargoHostUser
        password = cargoHostPassword
    }
}
