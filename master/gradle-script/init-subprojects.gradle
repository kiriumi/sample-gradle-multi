/*
 * サブプロジェクトを初期化する
 * ・実行タスク：initSubrojects eclipse
 *
 */
ext {
    packagePath = groupId.replace('.', '/')
    envAfterUt = environments.split() - [envUt]
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'

    // ソースディレクトリの作成
    task makeSourceDir << {

        // javaのソースディレクトリ作成（パッケージを含む）
        def makePackages = { javaSet ->
            javaSet.srcDirs.each { sourceDir ->
                makeDirIfNotExist(new File(sourceDir, packagePath))
            }
        }

        // resoucesのソースディレクトリ作成
        def makeResourceDir = { resourceSet ->
            resourceSet.srcDirs.each { sourceDir ->
                makeDirIfNotExist(sourceDir)
            }
        }

        makePackages sourceSets.main.java
        makeResourceDir sourceSets.main.resources
        makePackages sourceSets.test.java
        makeResourceDir sourceSets.test.resources
    }

    // 各種ディレクトリの作成
    task makeDirs << {

        // DBマイグレーションSQLのディレクトリ
        makeDirIfNotExist(new File(projectDir, dbMigreSqlDir))

        // 外部リソースのディレクトリ
        makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${shellDir}"))
        makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${confDir}"))

        // 各環境の外部リソースのディレクトリ
        envAfterUt.each { env ->
             makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${shellDir}_{$env}"))
             makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${confDir}_${env}"))
        }
    }

    task initSubrojects(dependsOn: [makeSourceDir, makeDirs])
}

private makeDirIfNotExist(File dir) {
     if(!dir.exists()) { dir.mkdirs() }
}
