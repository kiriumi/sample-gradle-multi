/*
 * 共有プロジェクトをビルドし、Mavenリポジトリにアップロードする
 * ・実行タスク：clean build afterBuild uploadArchives
 *
 */
// 共有プロジェクト共通
sharedProjects.each { sharedProject ->

    project( ":${sharedProject}") {

        apply plugin: 'maven'

        // 設定
        configurations {
            deployerJars
        }

        // 依存関係
        dependencies {
            deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
        }

        // ソースJar作成
        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allJava
         }

        // JavadocJar作成
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        // Mavenリポジトリへのアップロード対象に含める
        artifacts {
            archives sourcesJar
            archives javadocJar
        }

       task afterBuild(dependsOn: [javadoc, sourcesJar, javadocJar])

        uploadArchives {

            repositories.mavenDeployer {

                // ローカルのMavenリポジトリ
                repository(url: innerMavenRepoUrl)

                configuration = configurations.deployerJars

                // 社内Mavenリポジトリ
                if(!innerMavenRepoUploadUrl.isEmpty()) {
                    repository(url: innerMavenRepoUploadUrl) {
                        authentication(userName: innerMavenRepoUser, password: innerMavenRepoPassword)
                    }
                }
            }
        }
    }
}
