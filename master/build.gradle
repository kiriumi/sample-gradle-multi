/*
 * ビルドスクリプトを統括
 * ・実行タスク（CI）：clean cleanDb migrateDb assemble cargoStartLocal check cargoStopLocal afterBuild uploadArchives
 * ・実行タスク（リリース）：clean migrateDb assemble afterBuild uploadArchives deployBatch cargoUndeployRemote cargoDeployRemote commitDeploied tagDeploied
 */
ext{
    // ルートプロジェクトのMiscディレクトリ
    masterMiscDir = file('misc')
    checkstyleDir = file("${masterMiscDir}/checkstyle")
    jacocoDir= file("${masterMiscDir}/jacoco")
}


// 拡張コピータスククラ（更新日時を維持するメソッドを追加）
def class CopyExtended extends Copy {

    // 更新日時を維持する
    def presereveTimestamp() {

        def copyFileDetailses = []

        eachFile { copyFileDetailses <<  it } // eachFileの実行タイミングはdoLastと同じ

        doLast {

            copyFileDetailses.each { copyFileDetails ->
                def destFile = new File(destinationDir, copyFileDetails.path)
                if(destFile.exists()) { destFile.setLastModified(copyFileDetails.lastModified) }
            }
        }
    }
}


// 外部Gradleスクリプトの適用
def gradleScriptsDir = 'gradle-scripts'
apply from: "${gradleScriptsDir}/java.gradle"
apply from: "${gradleScriptsDir}/test.gradle"
apply from: "${gradleScriptsDir}/publish.gradle"
apply from: "${gradleScriptsDir}/init-projects.gradle"
apply from: "${gradleScriptsDir}/db-migration.gradle"
apply from: "${gradleScriptsDir}/deploy-batch.gradle"
apply from: "${gradleScriptsDir}/deploy-web.gradle"

