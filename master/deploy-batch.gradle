/*
 * マスターに配布物を集約し、デプロイする
 * copyOuterResoucesToDists copyArchivesToDists zipDists
 *
 */
ext {
    tempDistsDir = "$distsDir/$deployDistsDir"
}

// サブプロジェクト共通
subprojects{

    // 外部リソースをコピー
    task copyDists << {

        copy {
            def outerShellDir = "$deployDistsDir/$shellDir"

            from outerShellDir
            if(environment.equals('SNAPSHOT')) { from "$outerShellDir$stageNo" } // 開発時は該当の面のシェルをコピー

            into "$distsDir/$shellDir"
        }

        copy {
            def outerConfDir = "$deployDistsDir/$confDir"

            from outerConfDir
            if(environment.equals('SNAPSHOT')) { from "$outerConfDir$stageNo" } // 開発時は該当の面の設定ファイルをコピー

            into "$distsDir/$confDir"
        }
    }


}

// 業務プロジェクト共通
bizProjects.each { subProject ->

    project( ":$subProject.name") {

        // 業務プロジェクトからJarをコピー
        task copyJars << {

            copy {
                from libsDir
                into "$distsDir/$jarDir"
            }

            copy {
                from configurations.compile
                into "$distsDir/$jarDir/dependencies"
            }
        }
    }
}

// 各プロジェクトの配布物をマスターにコピー
task copyDistsToMaster <<  {

    subprojects.each { subProject ->

         copy {
            from subProject.distsDir
            into tempDistsDir
        }
    }
}

// 配布物を圧縮
task zipDists(type: Zip, dependsOn: copyDistsToMaster)  {
    archiveName = String.format('dists-%s.zip', new Date().format('yyyyMMdd'));
    from tempDistsDir
}

// サーバ接続情報
remotes {

    transpoter {
        host = deployHost
        user = deployUser
        password = deployPassword

    }

    deployer {
        host = deployHost
        user = deployUser
        password = deployPassword
    }

}

// SSH共通設定　
ssh.settings {
    knownHosts = allowAnyHosts
}

// デプロイ
task deploy << {

    def deployWorkDir = '/WORK/deploy'

    ssh.run {

        session(remotes.transpoter)  {

            //execute("mkdir -p -m $modeDir $deployWorkDir") // 作業ディレクトリ作成
            //put from: deployWorkDir, into: deployWorkDir // サーバ転送
            // unzip // 解凍

        }

        session(remotes.deployer)  {

            //execute("rm -rf ") // 過去バージョンのJarを削除
            //execute("cp -ra $deployDistsDir") // デプロイ

            // 権限変更
            execute("chmod $modeShell $deployDistsDir/$shellDir")
            execute("chmod $modeConf $deployDistsDir/$confDir")
            execute("chmod $modeArchive $deployDistsDir/$jarDir")
        }
    }
}
