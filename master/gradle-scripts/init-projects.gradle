/*
 * プロジェクトを初期化する
 * ・実行タスク：initSubrojects cleanEclipse eclipse
 *
 */
allprojects {

    apply plugin: 'eclipse'

    // Eclipseの.project設定
    eclipse.project {

        name = project.name
        buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
        natures 'org.eclipse.buildship.core.gradleprojectnature'
    }

    // Eclipseプロジェクトの文字コード設定
    eclipseJdt << {

        File f = file('.settings/org.eclipse.core.resources.prefs')
        f.write('eclipse.preferences.version=1\n')
        f.append('encoding/<project>=UTF-8')
    }

    // Eclipseプロジェクトの改行コード設定
    eclipseJdt << {

        File file = file('.settings/org.eclipse.core.runtime.prefs')
        file.write('eclipse.preferences.version=1\n')
        file.append('line.separator=\\n\n')
    }

    // Buildshipの設定
    eclipseJdt << {

        File file = file('.settings/org.eclipse.buildship.core.prefs')
        file.write('override.workspace.settings=true\n')
        file.append('connection.gradle.distribution=GRADLE_DISTRIBUTION(WRAPPER)\n')
        file.append('gradle.user.home=\n')
        file.append('connection.project.dir=\n')
        file.append('offline.mode=false\n')
        file.append('build.scans.enabled=false\n')
    }
}

subprojects {

    ext {
        // パッケージのパス
        packagePath = group.replace('.', '/')

        // UT以外の環境名
        envAfterUt = environments.split() - [envUt]
    }

    // ソースディレクトリの作成
    task makeSourceDirs << {

        // javaのソースディレクトリ作成（パッケージを含む）
        def makePackages = { javaSet ->
            javaSet.srcDirs.each { makeDirIfNotExist(new File(it, packagePath)) }
        }

        // resoucesのソースディレクトリ作成
        def makeResourceDir = { resourceSet ->
            resourceSet.srcDirs.each { makeDirIfNotExist(it) }
        }

        makePackages sourceSets.main.java
        makeResourceDir sourceSets.main.resources
        makePackages sourceSets.test.java
        makeResourceDir sourceSets.test.resources
    }

    // 各種ディレクトリの作成
    task makeOtherDirs << {

        // DBマイグレーションSQLのディレクトリ
        makeDirIfNotExist(new File(projectDir, dbMigreSqlDir))

        // 外部リソースのディレクトリ
        makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${shellDir}"))
        makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${confDir}"))

        // 各環境の外部リソースのディレクトリ
        envAfterUt.each {

             makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${shellDir}_${it}"))
             makeDirIfNotExist(new File(projectDir, "${deployRootDir}/${confDir}_${it}"))
        }
    }

    task initSubprojects(dependsOn: [makeSourceDirs, makeOtherDirs])
}

// ディレクトリ作成
private makeDirIfNotExist(File dir) {

     if(!dir.exists()) { dir.mkdirs() }
}
