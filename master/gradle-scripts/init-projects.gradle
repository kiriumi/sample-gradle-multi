/*
 * プロジェクトを初期化する
 * ・実行タスク：wrapper initSubrojects cleanEclipse eclipse
 *
 */
import sample.gradle.multi.build.utils.Utils

wrapper.gradleVersion = gradleWrapperVersion

allprojects {

    apply plugin: 'eclipse'

    eclipse {

        // .projectの設定
        project {

            name = project.name
            buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
            natures 'org.eclipse.buildship.core.gradleprojectnature'
        }
    }

    eclipseJdt { doLast {

        // 文字コード
        file('.settings/org.eclipse.core.resources.prefs').write("""
            encoding/<project>=${encoding}
            """.stripIndent())

         // 改行コード
         /* TODO: EclipseのAnyEditが保存時にnull例外が発生するため、コメントアウト
         file('.settings/org.eclipse.core.runtime.prefs').write("""
            line.separator=${lineSeparator}
            """.stripIndent())
         */

         // Buildship
         file('.settings/org.eclipse.buildship.core.prefs').write("""
            connection.project.dir=
            override.workspace.settings=true
            connection.gradle.distribution=GRADLE_DISTRIBUTION(VERSION(${wrapper.gradleVersion}))
            gradle.user.home=
            offline.mode=false
            build.scans.enabled=false
            """.stripIndent())
    }}
}

subprojects {

    ext {
        // パッケージからパスに変換
        packagePath = group.replace('.', '/')

        // UT以外の環境名
        envAfterUt = environments.split() - [envUt]
    }

    // ソースディレクトリの作成タスク
    task makeSourceSetsDirs doLast {

        // javaのソースディレクトリ作成（パッケージを含む）
        def makePackages = { javaSet ->

            javaSet.srcDirs.each { Utils.makeDirIfNotExists(new File(it, packagePath)) }
        }

        // resoucesのソースディレクトリ作成
        def makeResourceDir = { resourceSet ->

            resourceSet.srcDirs.each { Utils.makeDirIfNotExists(it) }
        }

        makePackages sourceSets.main.java
        makeResourceDir sourceSets.main.resources
        makePackages sourceSets.test.java
        makeResourceDir sourceSets.test.resources
    }

    // 各種ディレクトリの作成タスク
    task makeMiscDirs doLast {

        // DBマイグレーションSQLのディレクトリ
        Utils.makeDirIfNotExists(new File(projectDir, dbMigreSqlDir))

        // 外部リソースのディレクトリ
        Utils.makeDirIfNotExists(new File(projectDir, "${deployRootDir}/${shellDir}"))
        Utils.makeDirIfNotExists(new File(projectDir, "${deployRootDir}/${confDir}"))

        // 各環境の外部リソースのディレクトリ
        envAfterUt.each {

             Utils.makeDirIfNotExists(new File(projectDir, "${deployRootDir}/${shellDir}_${it}"))
             Utils.makeDirIfNotExists(new File(projectDir, "${deployRootDir}/${confDir}_${it}"))
        }
    }

    task initSubprojects(dependsOn: [makeSourceSetsDirs, makeMiscDirs])
}
