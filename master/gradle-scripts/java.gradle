/*
 * Jar, Warを作成する
 * ・実行タスク：clean build
 *
 */
// 拡張プロパティ
ext{
    // プロジェクト一覧
    sharedProjects = getProjects(keywordsSharedProject) // 共有プロジェクト
    batchProjects = getProjects(keywordsBatchProject) // バッチプロジェクト
    webProjects = getProjects(keywordsWebProject) // オンラインプロジェクト
    bizBatchProjects = batchProjects - sharedProjects // 業務バッチプロジェクト
    bizWebProjects =  webProjects - sharedProjects // 業務オンラインプロジェクト
    bizProjects = bizBatchProjects + bizWebProjects // 業務プロジェクト
}

allprojects {

    apply plugin: 'java-library'

    configurations.all {

        // 依存関係のローカルキャッシュ無効化（「changing: true」を対象の依存関係の付与する）
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    dependencies {

    }

    repositories {

        mavenCentral()
        maven { url inhouseMavenRepoUrl } // 社内Mavenリポジトリ
    }
}

subprojects{

    group = "${baseGroupId}.${groupId}"
    version = branchName

    compileJava {

        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        options.encoding = encoding
        options.compilerArgs += ['-proc:none'] // 注釈処理（ソースコードの自動生成や検証）をしない
    }

    compileTestJava {

        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        options.encoding = encoding
        options.compilerArgs += ['-proc:none'] // 注釈処理をしない
    }

    dependencies {

        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    }
}

// 業務プロジェクト共通
configure(bizProjects) {

    ext {
        // 依存する共有プロジェクト
        dependProjects = getProjects(dependProjectNames)
    }

    dependencies {

        dependProjects.name.each{ implementation project(":${it}") } // 共有プロジェクト
        implementation files("${deployRootDir}/${confDir}") // 外部リソースのクラスパス
    }
}

// 業務バッチプロジェクト共通
configure(bizProjects) {

    dependencies {

    }
}

// 業務Webプロジェクト共通
configure(bizWebProjects) {

    apply plugin: 'war'
    apply plugin: 'eclipse-wtp'

    ext {
        // ローカルWebサーバ情報
        localWebServerHome = localWebServerDir == ''
            ? new File(rootProject.projectDir, "web-server/${webServerHome}")
            : new File("${localWebServerDir}/${webServerHome}")

        localWebServerLibDir = new File(localWebServerHome, webServerLibDir)
    }

    // コンテキストパス
    eclipse.wtp.component { contextPath  = contextPath }

    dependencies {

        providedCompile fileTree(dir: localWebServerLibDir, include: 'java*/**/*.jar')
    }
}

// 対象のプロジェクト一覧取得メソッド
def getProjects(keywords) {

    return subprojects.findAll {

        def projectName = it.name
        keywords.split().any { projectName.contains(it) }
    }
}
