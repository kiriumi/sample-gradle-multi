// 拡張プロパティ
ext{
    // プロジェクト一覧
    sharedProjects = getProjects(keywordsSharedProject) // 共有プロジェクト
    batchProjects = getProjects(keywordsBatchProject) // バッチプロジェクト
    webProjects = getProjects(keywordsWebProject) // オンラインプロジェクト
    bizBatchProjects = batchProjects - sharedProjects // 業務バッチプロジェクト
    bizWebProjects =  webProjects - sharedProjects // 業務オンラインプロジェクト
    bizProjects = bizBatchProjects + bizWebProjects // 業務プロジェクト

    // マスタープロジェクトのリソースディレクトリ
    masterResourcesDir = file('resources')
    checkstyleDir = file("${masterResourcesDir}/checkstyle")
    jacocoDir= file("${masterResourcesDir}/jacoco")
}

// 全プロジェクト共通
allprojects {

    apply plugin: 'java'

	// 拡張プロパティ
    ext {

        javaVersion = '1.8'
        encoding = 'UTF-8'
        lineSeparator = '\\n'
    }

    // 設定
    configurations.all {
        // 依存関係のローカルキャッシュ無効化（「changing: true」を対象の依存関係の付与する）
        //   例：compile group: （中略） version: '2.11.1', changing: true
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    // 依存関係
    dependencies {

    }

    repositories {

        mavenCentral() // セントラルMavenリポジトリ
        maven { url innerMavenRepoUrl } // 社内Mavenリポジトリ
        mavenLocal() // ローカルMavenリポジトリ
    }
}

// サブプロジェクト共通
subprojects{

    group = "${baseGroupId}.${groupId}"
    version = "${branchName}.${environment}"

    compileJava {

        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        options.encoding = encoding
    }

    compileTestJava {

        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        options.encoding = encoding
    }

    // 依存関係
    dependencies {

        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    }
}

// 業務プロジェクト共通
configure(bizProjects) {

    ext {
        // 依存する共有プロジェクト
        dependProjects = getProjects(dependProjectNames)
    }

    // 依存関係
    dependencies {

        dependProjects.name.each{ compile project(":${it}") } // 共有プロジェクト
        runtime files("${deployRootDir}/${confDir}") // 外部リソースのクラスパス
    }
}

// 業務バッチプロジェクト共通
configure(bizProjects) {

    // 依存関係
    dependencies {

    }
}

// 業務Webプロジェクト共通
configure(bizWebProjects) {

    apply plugin: 'war'
    apply plugin: 'eclipse-wtp'

    // コンテキストパス
    eclipse.wtp.component { contextPath  = contextPath }

    // 依存関係
    dependencies {

    }
}

// 対象のプロジェクト一覧を取得
def getProjects(keywords) {

    return subprojects.findAll {

        def projectName = it.name
        keywords.split().any { projectName.contains(it) }
    }
}
